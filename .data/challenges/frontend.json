{
  "challenges": [
    {
      "title": "Currency Converter",
      "description": "Build a currency converter using HTML, CSS, and JavaScript. Users should be able to convert amounts between different currencies.",
      "score": 4,
      "appRequirements": [
        "Design and implement a user interface with input fields for amount and currency",
        "Fetch currency exchange rates from an API",
        "Perform currency conversions based on user input",
        "Display the converted amount",
        "Include responsive design for optimal viewing on different devices"
      ]
    },
    {
      "title": "Color Palette Generator",
      "description": "Create a color palette generator using HTML, CSS, and JavaScript. Users should be able to generate random color palettes and copy the color codes.",
      "score": 3,
      "appRequirements": [
        "Design and implement a user interface to display color palettes",
        "Generate random color codes for each palette",
        "Allow users to copy the color codes to the clipboard",
        "Include responsive design for optimal viewing on different devices"
      ]
    },
    {
      "title": "Movie Recommendation App",
      "description": "Develop a movie recommendation application using React, Vue, or Angular. Users should be able to search for movies, view movie details, and get recommendations based on their preferences.",
      "score": 5,
      "appRequirements": [
        "Design and implement a user interface with a search input for movies",
        "Fetch movie data from an API based on user input",
        "Display a list of matching movies with images and titles",
        "Allow users to click on a movie to view its detailed information",
        "Implement a recommendation algorithm based on user preferences",
        "Include responsive design for optimal viewing on different devices"
      ]
    },
    {
      "title": "Weather Forecast App",
      "description": "Build a weather forecast application using React, Vue, or Angular. The app should retrieve weather data from a public API and display current weather conditions and a multi-day forecast.",
      "score": 5,
      "appRequirements": [
        "Fetch weather data from a weather API",
        "Display current weather conditions (temperature, humidity, wind speed, etc.)",
        "Show a multi-day forecast with daily temperature highs and lows",
        "Implement search functionality for different locations",
        "Include icons or images to represent weather conditions",
        "Provide options to switch between Celsius and Fahrenheit"
      ]
    },
    {
      "title": "Portfolio Website",
      "description": "Create a personal portfolio website using HTML, CSS, and JavaScript. Showcase your skills, projects, and achievements in a visually appealing and responsive design.",
      "score": 4,
      "appRequirements": [
        "Design and implement a visually appealing layout",
        "Include sections for about me, skills, projects, and contact information",
        "Display project images, descriptions, and links",
        "Make the website responsive for different screen sizes",
        "Implement smooth scrolling and interactive animations"
      ]
    },
    {
      "title": "Interactive Image Gallery",
      "description": "Build an interactive image gallery using HTML, CSS, and JavaScript. The gallery should allow users to view and navigate through a collection of images with additional features like zooming, captions, and slideshow.",
      "score": 3,
      "appRequirements": [
        "Display a grid of thumbnail images",
        "Implement zoom functionality for images",
        "Include captions or descriptions for each image",
        "Allow users to navigate through images using next and previous buttons",
        "Add a slideshow feature to automatically cycle through images"
      ]
    },
    {
      "title": "Music Player",
      "description": "Create a simple music player using HTML, CSS, and JavaScript. Users should be able to play, pause, and skip songs.",
      "score": 3,
      "appRequirements": [
        "Design and implement a user interface with play, pause, and skip buttons",
        "Include a playlist of songs",
        "Allow users to play, pause, and skip songs",
        "Display the current song's information"
      ]
    },
    {
      "title": "Tic-Tac-Toe Game",
      "description": "Develop a tic-tac-toe game using React, Vue, or Angular. Users should be able to play against the computer or another player.",
      "score": 5,
      "appRequirements": [
        "Design and implement a game board to display the tic-tac-toe grid",
        "Allow users to make moves and determine the winner",
        "Implement a computer opponent for single-player mode"
      ]
    },
    {
      "title": "Interactive Pricing Component",
      "description": "Build an interactive pricing component using HTML, CSS, and JavaScript. Create a pricing card that allows users to switch between different pricing plans and see the updated details and pricing.",
      "score": 4,
      "appRequirements": [
        "Display pricing plans with features and prices",
        "Implement a toggle switch to switch between plans",
        "Update the displayed details and pricing based on the selected plan",
        "Add smooth transitions for plan switching",
        "Include a call-to-action button for signing up",
        "Make the component responsive for different screen sizes",
        "Ensure accessibility by using proper markup and keyboard navigation"
      ]
    }
  ]
}
